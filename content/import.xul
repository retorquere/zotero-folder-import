<?xml version="1.0"?>
<!DOCTYPE window SYSTEM "chrome://zotero-better-bibtex/locale/zotero-better-bibtex.dtd">
<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
<dialog xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  title="Add Files from Folderâ€¦"
  buttons="accept,cancel"
  onload="onLoad();"
  ondialogaccept="return onAccept();"
  ondialogcancel="return onCancel();"
  >

  <listbox id="folder-import-extensions" seltype="multiple" rows="30" width="400" onselect="selectionChanged()"/>

  <radiogroup id="folder-import-link-or-import" onselect="selectionChanged()">
    <radio id="folder-import-link" label="Link to files" value="link"/>
    <radio id="folder-import-import" label="Store copy of files" value="store"/>
  </radiogroup>

  <script type="text/javascript">//<![CDATA[
    let params, extensions, mode

    function onLoad() {
      params = window.arguments[0]
      extensions = document.getElementById('folder-import-extensions')
      mode = document.getElementById('folder-import-link-or-import')

      const defaults = [
        'pdf',
        'docx',
        'html',
        'odt',
      ].sort().reverse()

      for (const ext of Array.from(params.extensions).sort()) {
        const li = extensions.appendItem(ext, ext)
        li.setAttribute('id', `folder-import-ext-${ext}`)
        // if (defaults.includes(ext)) extensions.addItemToSelection(li)
        extensions.appendChild(li)
      }
      if (params.extensions.size > 1) {
        for (const ext of defaults) {
          const li = document.getElementById(`folder-import-ext-${ext}`)
          if (li) extensions.insertBefore(li, extensions.firstElementChild)
        }
      }

      mode.selectedItem = document.getElementById('folder-import-import')
      if (!mode.link) mode.setAttribute('disabled', true)
    }

    function selected() {
      return Array.from(extensions.selectedItems)
        .map(ext => ext.getAttribute('value'))
        .filter(ext => params.link || ext !== 'lnk')
    }

    function selectionChanged() {
      if (linkMode()) return
      const lnk = document.getElementById('folder-import-ext-lnk')
      if (lnk) extensions.removeItemFromSelection(lnk)
    }

    function onCancel() {
      params.extensions = new Set
      return true
    }

    function linkMode() {
      return mode && (mode.selectedItem === document.getElementById('folder-import-link'))
    }

    function onAccept() {
      params.link = linkMode()
      params.extensions = new Set(selected())
      return true
    }
  //]]></script>
</dialog>
